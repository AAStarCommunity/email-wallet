pragma circom 2.1.5;
include "@zk-email/circuits/regexes/regex_helpers.circom";

template SubjectAllRegex(msg_bytes) {
	signal input msg[msg_bytes];
	signal output out;

	var num_bytes = msg_bytes+1;
	signal in[num_bytes];
	in[0]<==128;
	for (var i = 0; i < msg_bytes; i++) {
		in[i+1] <== msg[i];
	}

	component eq[88][num_bytes];
	component lt[4][num_bytes];
	component and[17][num_bytes];
	component multi_or[17][num_bytes];
	signal states[num_bytes+1][14];
	component state_changed[num_bytes];

	states[0][0] <== 1;
	for (var i = 1; i < 14; i++) {
		states[0][i] <== 0;
	}

	for (var i = 0; i < num_bytes; i++) {
		state_changed[i] = MultiOR(13);
		lt[0][i] = LessThan(8);
		lt[0][i].in[0] <== 47;
		lt[0][i].in[1] <== in[i];
		lt[1][i] = LessThan(8);
		lt[1][i].in[0] <== in[i];
		lt[1][i].in[1] <== 127;
		and[0][i] = AND();
		and[0][i].a <== lt[0][i].out;
		and[0][i].b <== lt[1][i].out;
		eq[0][i] = IsEqual();
		eq[0][i].in[0] <== in[i];
		eq[0][i].in[1] <== 34;
		eq[1][i] = IsEqual();
		eq[1][i].in[0] <== in[i];
		eq[1][i].in[1] <== 44;
		eq[2][i] = IsEqual();
		eq[2][i].in[0] <== in[i];
		eq[2][i].in[1] <== 32;
		eq[3][i] = IsEqual();
		eq[3][i].in[0] <== in[i];
		eq[3][i].in[1] <== 33;
		eq[4][i] = IsEqual();
		eq[4][i].in[0] <== in[i];
		eq[4][i].in[1] <== 35;
		eq[5][i] = IsEqual();
		eq[5][i].in[0] <== in[i];
		eq[5][i].in[1] <== 36;
		eq[6][i] = IsEqual();
		eq[6][i].in[0] <== in[i];
		eq[6][i].in[1] <== 37;
		eq[7][i] = IsEqual();
		eq[7][i].in[0] <== in[i];
		eq[7][i].in[1] <== 38;
		eq[8][i] = IsEqual();
		eq[8][i].in[0] <== in[i];
		eq[8][i].in[1] <== 39;
		eq[9][i] = IsEqual();
		eq[9][i].in[0] <== in[i];
		eq[9][i].in[1] <== 40;
		eq[10][i] = IsEqual();
		eq[10][i].in[0] <== in[i];
		eq[10][i].in[1] <== 41;
		eq[11][i] = IsEqual();
		eq[11][i].in[0] <== in[i];
		eq[11][i].in[1] <== 42;
		eq[12][i] = IsEqual();
		eq[12][i].in[0] <== in[i];
		eq[12][i].in[1] <== 43;
		eq[13][i] = IsEqual();
		eq[13][i].in[0] <== in[i];
		eq[13][i].in[1] <== 45;
		eq[14][i] = IsEqual();
		eq[14][i].in[0] <== in[i];
		eq[14][i].in[1] <== 46;
		eq[15][i] = IsEqual();
		eq[15][i].in[0] <== in[i];
		eq[15][i].in[1] <== 47;
		and[1][i] = AND();
		and[1][i].a <== states[i][1];
		multi_or[0][i] = MultiOR(17);
		multi_or[0][i].in[0] <== and[0][i].out;
		multi_or[0][i].in[1] <== eq[0][i].out;
		multi_or[0][i].in[2] <== eq[1][i].out;
		multi_or[0][i].in[3] <== eq[2][i].out;
		multi_or[0][i].in[4] <== eq[3][i].out;
		multi_or[0][i].in[5] <== eq[4][i].out;
		multi_or[0][i].in[6] <== eq[5][i].out;
		multi_or[0][i].in[7] <== eq[6][i].out;
		multi_or[0][i].in[8] <== eq[7][i].out;
		multi_or[0][i].in[9] <== eq[8][i].out;
		multi_or[0][i].in[10] <== eq[9][i].out;
		multi_or[0][i].in[11] <== eq[10][i].out;
		multi_or[0][i].in[12] <== eq[11][i].out;
		multi_or[0][i].in[13] <== eq[12][i].out;
		multi_or[0][i].in[14] <== eq[13][i].out;
		multi_or[0][i].in[15] <== eq[14][i].out;
		multi_or[0][i].in[16] <== eq[15][i].out;
		and[1][i].b <== multi_or[0][i].out;
		lt[2][i] = LessThan(8);
		lt[2][i].in[0] <== 47;
		lt[2][i].in[1] <== in[i];
		lt[3][i] = LessThan(8);
		lt[3][i].in[0] <== in[i];
		lt[3][i].in[1] <== 127;
		and[2][i] = AND();
		and[2][i].a <== lt[2][i].out;
		and[2][i].b <== lt[3][i].out;
		eq[16][i] = IsEqual();
		eq[16][i].in[0] <== in[i];
		eq[16][i].in[1] <== 34;
		eq[17][i] = IsEqual();
		eq[17][i].in[0] <== in[i];
		eq[17][i].in[1] <== 44;
		eq[18][i] = IsEqual();
		eq[18][i].in[0] <== in[i];
		eq[18][i].in[1] <== 32;
		eq[19][i] = IsEqual();
		eq[19][i].in[0] <== in[i];
		eq[19][i].in[1] <== 33;
		eq[20][i] = IsEqual();
		eq[20][i].in[0] <== in[i];
		eq[20][i].in[1] <== 35;
		eq[21][i] = IsEqual();
		eq[21][i].in[0] <== in[i];
		eq[21][i].in[1] <== 36;
		eq[22][i] = IsEqual();
		eq[22][i].in[0] <== in[i];
		eq[22][i].in[1] <== 37;
		eq[23][i] = IsEqual();
		eq[23][i].in[0] <== in[i];
		eq[23][i].in[1] <== 38;
		eq[24][i] = IsEqual();
		eq[24][i].in[0] <== in[i];
		eq[24][i].in[1] <== 39;
		eq[25][i] = IsEqual();
		eq[25][i].in[0] <== in[i];
		eq[25][i].in[1] <== 40;
		eq[26][i] = IsEqual();
		eq[26][i].in[0] <== in[i];
		eq[26][i].in[1] <== 41;
		eq[27][i] = IsEqual();
		eq[27][i].in[0] <== in[i];
		eq[27][i].in[1] <== 42;
		eq[28][i] = IsEqual();
		eq[28][i].in[0] <== in[i];
		eq[28][i].in[1] <== 43;
		eq[29][i] = IsEqual();
		eq[29][i].in[0] <== in[i];
		eq[29][i].in[1] <== 45;
		eq[30][i] = IsEqual();
		eq[30][i].in[0] <== in[i];
		eq[30][i].in[1] <== 46;
		eq[31][i] = IsEqual();
		eq[31][i].in[0] <== in[i];
		eq[31][i].in[1] <== 47;
		and[3][i] = AND();
		and[3][i].a <== states[i][13];
		multi_or[1][i] = MultiOR(17);
		multi_or[1][i].in[0] <== and[2][i].out;
		multi_or[1][i].in[1] <== eq[16][i].out;
		multi_or[1][i].in[2] <== eq[17][i].out;
		multi_or[1][i].in[3] <== eq[18][i].out;
		multi_or[1][i].in[4] <== eq[19][i].out;
		multi_or[1][i].in[5] <== eq[20][i].out;
		multi_or[1][i].in[6] <== eq[21][i].out;
		multi_or[1][i].in[7] <== eq[22][i].out;
		multi_or[1][i].in[8] <== eq[23][i].out;
		multi_or[1][i].in[9] <== eq[24][i].out;
		multi_or[1][i].in[10] <== eq[25][i].out;
		multi_or[1][i].in[11] <== eq[26][i].out;
		multi_or[1][i].in[12] <== eq[27][i].out;
		multi_or[1][i].in[13] <== eq[28][i].out;
		multi_or[1][i].in[14] <== eq[29][i].out;
		multi_or[1][i].in[15] <== eq[30][i].out;
		multi_or[1][i].in[16] <== eq[31][i].out;
		and[3][i].b <== multi_or[1][i].out;
		multi_or[2][i] = MultiOR(2);
		multi_or[2][i].in[0] <== and[1][i].out;
		multi_or[2][i].in[1] <== and[3][i].out;
		states[i+1][1] <== multi_or[2][i].out;
		state_changed[i].in[0] <== states[i+1][1];
		eq[32][i] = IsEqual();
		eq[32][i].in[0] <== in[i];
		eq[32][i].in[1] <== 91;
		eq[33][i] = IsEqual();
		eq[33][i].in[0] <== in[i];
		eq[33][i].in[1] <== 34;
		eq[34][i] = IsEqual();
		eq[34][i].in[0] <== in[i];
		eq[34][i].in[1] <== 92;
		eq[35][i] = IsEqual();
		eq[35][i].in[0] <== in[i];
		eq[35][i].in[1] <== 114;
		eq[36][i] = IsEqual();
		eq[36][i].in[0] <== in[i];
		eq[36][i].in[1] <== 93;
		and[4][i] = AND();
		and[4][i].a <== states[i][0];
		multi_or[3][i] = MultiOR(5);
		multi_or[3][i].in[0] <== eq[32][i].out;
		multi_or[3][i].in[1] <== eq[33][i].out;
		multi_or[3][i].in[2] <== eq[34][i].out;
		multi_or[3][i].in[3] <== eq[35][i].out;
		multi_or[3][i].in[4] <== eq[36][i].out;
		and[4][i].b <== multi_or[3][i].out;
		states[i+1][2] <== and[4][i].out;
		state_changed[i].in[1] <== states[i+1][2];
		eq[37][i] = IsEqual();
		eq[37][i].in[0] <== in[i];
		eq[37][i].in[1] <== 91;
		eq[38][i] = IsEqual();
		eq[38][i].in[0] <== in[i];
		eq[38][i].in[1] <== 34;
		eq[39][i] = IsEqual();
		eq[39][i].in[0] <== in[i];
		eq[39][i].in[1] <== 94;
		eq[40][i] = IsEqual();
		eq[40][i].in[0] <== in[i];
		eq[40][i].in[1] <== 93;
		and[5][i] = AND();
		and[5][i].a <== states[i][0];
		multi_or[4][i] = MultiOR(4);
		multi_or[4][i].in[0] <== eq[37][i].out;
		multi_or[4][i].in[1] <== eq[38][i].out;
		multi_or[4][i].in[2] <== eq[39][i].out;
		multi_or[4][i].in[3] <== eq[40][i].out;
		and[5][i].b <== multi_or[4][i].out;
		eq[41][i] = IsEqual();
		eq[41][i].in[0] <== in[i];
		eq[41][i].in[1] <== 91;
		eq[42][i] = IsEqual();
		eq[42][i].in[0] <== in[i];
		eq[42][i].in[1] <== 34;
		eq[43][i] = IsEqual();
		eq[43][i].in[0] <== in[i];
		eq[43][i].in[1] <== 92;
		eq[44][i] = IsEqual();
		eq[44][i].in[0] <== in[i];
		eq[44][i].in[1] <== 110;
		eq[45][i] = IsEqual();
		eq[45][i].in[0] <== in[i];
		eq[45][i].in[1] <== 93;
		and[6][i] = AND();
		and[6][i].a <== states[i][2];
		multi_or[5][i] = MultiOR(5);
		multi_or[5][i].in[0] <== eq[41][i].out;
		multi_or[5][i].in[1] <== eq[42][i].out;
		multi_or[5][i].in[2] <== eq[43][i].out;
		multi_or[5][i].in[3] <== eq[44][i].out;
		multi_or[5][i].in[4] <== eq[45][i].out;
		and[6][i].b <== multi_or[5][i].out;
		multi_or[6][i] = MultiOR(2);
		multi_or[6][i].in[0] <== and[5][i].out;
		multi_or[6][i].in[1] <== and[6][i].out;
		states[i+1][3] <== multi_or[6][i].out;
		state_changed[i].in[2] <== states[i+1][3];
		eq[46][i] = IsEqual();
		eq[46][i].in[0] <== in[i];
		eq[46][i].in[1] <== 91;
		eq[47][i] = IsEqual();
		eq[47][i].in[0] <== in[i];
		eq[47][i].in[1] <== 34;
		eq[48][i] = IsEqual();
		eq[48][i].in[0] <== in[i];
		eq[48][i].in[1] <== 92;
		eq[49][i] = IsEqual();
		eq[49][i].in[0] <== in[i];
		eq[49][i].in[1] <== 114;
		eq[50][i] = IsEqual();
		eq[50][i].in[0] <== in[i];
		eq[50][i].in[1] <== 93;
		and[7][i] = AND();
		and[7][i].a <== states[i][1];
		multi_or[7][i] = MultiOR(5);
		multi_or[7][i].in[0] <== eq[46][i].out;
		multi_or[7][i].in[1] <== eq[47][i].out;
		multi_or[7][i].in[2] <== eq[48][i].out;
		multi_or[7][i].in[3] <== eq[49][i].out;
		multi_or[7][i].in[4] <== eq[50][i].out;
		and[7][i].b <== multi_or[7][i].out;
		states[i+1][4] <== and[7][i].out;
		state_changed[i].in[3] <== states[i+1][4];
		eq[51][i] = IsEqual();
		eq[51][i].in[0] <== in[i];
		eq[51][i].in[1] <== 91;
		eq[52][i] = IsEqual();
		eq[52][i].in[0] <== in[i];
		eq[52][i].in[1] <== 34;
		eq[53][i] = IsEqual();
		eq[53][i].in[0] <== in[i];
		eq[53][i].in[1] <== 115;
		eq[54][i] = IsEqual();
		eq[54][i].in[0] <== in[i];
		eq[54][i].in[1] <== 93;
		and[8][i] = AND();
		and[8][i].a <== states[i][3];
		multi_or[8][i] = MultiOR(4);
		multi_or[8][i].in[0] <== eq[51][i].out;
		multi_or[8][i].in[1] <== eq[52][i].out;
		multi_or[8][i].in[2] <== eq[53][i].out;
		multi_or[8][i].in[3] <== eq[54][i].out;
		and[8][i].b <== multi_or[8][i].out;
		states[i+1][5] <== and[8][i].out;
		state_changed[i].in[4] <== states[i+1][5];
		eq[55][i] = IsEqual();
		eq[55][i].in[0] <== in[i];
		eq[55][i].in[1] <== 91;
		eq[56][i] = IsEqual();
		eq[56][i].in[0] <== in[i];
		eq[56][i].in[1] <== 34;
		eq[57][i] = IsEqual();
		eq[57][i].in[0] <== in[i];
		eq[57][i].in[1] <== 117;
		eq[58][i] = IsEqual();
		eq[58][i].in[0] <== in[i];
		eq[58][i].in[1] <== 93;
		and[9][i] = AND();
		and[9][i].a <== states[i][5];
		multi_or[9][i] = MultiOR(4);
		multi_or[9][i].in[0] <== eq[55][i].out;
		multi_or[9][i].in[1] <== eq[56][i].out;
		multi_or[9][i].in[2] <== eq[57][i].out;
		multi_or[9][i].in[3] <== eq[58][i].out;
		and[9][i].b <== multi_or[9][i].out;
		states[i+1][6] <== and[9][i].out;
		state_changed[i].in[5] <== states[i+1][6];
		eq[59][i] = IsEqual();
		eq[59][i].in[0] <== in[i];
		eq[59][i].in[1] <== 91;
		eq[60][i] = IsEqual();
		eq[60][i].in[0] <== in[i];
		eq[60][i].in[1] <== 34;
		eq[61][i] = IsEqual();
		eq[61][i].in[0] <== in[i];
		eq[61][i].in[1] <== 98;
		eq[62][i] = IsEqual();
		eq[62][i].in[0] <== in[i];
		eq[62][i].in[1] <== 93;
		and[10][i] = AND();
		and[10][i].a <== states[i][6];
		multi_or[10][i] = MultiOR(4);
		multi_or[10][i].in[0] <== eq[59][i].out;
		multi_or[10][i].in[1] <== eq[60][i].out;
		multi_or[10][i].in[2] <== eq[61][i].out;
		multi_or[10][i].in[3] <== eq[62][i].out;
		and[10][i].b <== multi_or[10][i].out;
		states[i+1][7] <== and[10][i].out;
		state_changed[i].in[6] <== states[i+1][7];
		eq[63][i] = IsEqual();
		eq[63][i].in[0] <== in[i];
		eq[63][i].in[1] <== 91;
		eq[64][i] = IsEqual();
		eq[64][i].in[0] <== in[i];
		eq[64][i].in[1] <== 34;
		eq[65][i] = IsEqual();
		eq[65][i].in[0] <== in[i];
		eq[65][i].in[1] <== 92;
		eq[66][i] = IsEqual();
		eq[66][i].in[0] <== in[i];
		eq[66][i].in[1] <== 110;
		eq[67][i] = IsEqual();
		eq[67][i].in[0] <== in[i];
		eq[67][i].in[1] <== 93;
		and[11][i] = AND();
		and[11][i].a <== states[i][4];
		multi_or[11][i] = MultiOR(5);
		multi_or[11][i].in[0] <== eq[63][i].out;
		multi_or[11][i].in[1] <== eq[64][i].out;
		multi_or[11][i].in[2] <== eq[65][i].out;
		multi_or[11][i].in[3] <== eq[66][i].out;
		multi_or[11][i].in[4] <== eq[67][i].out;
		and[11][i].b <== multi_or[11][i].out;
		states[i+1][8] <== and[11][i].out;
		state_changed[i].in[7] <== states[i+1][8];
		eq[68][i] = IsEqual();
		eq[68][i].in[0] <== in[i];
		eq[68][i].in[1] <== 91;
		eq[69][i] = IsEqual();
		eq[69][i].in[0] <== in[i];
		eq[69][i].in[1] <== 34;
		eq[70][i] = IsEqual();
		eq[70][i].in[0] <== in[i];
		eq[70][i].in[1] <== 106;
		eq[71][i] = IsEqual();
		eq[71][i].in[0] <== in[i];
		eq[71][i].in[1] <== 93;
		and[12][i] = AND();
		and[12][i].a <== states[i][7];
		multi_or[12][i] = MultiOR(4);
		multi_or[12][i].in[0] <== eq[68][i].out;
		multi_or[12][i].in[1] <== eq[69][i].out;
		multi_or[12][i].in[2] <== eq[70][i].out;
		multi_or[12][i].in[3] <== eq[71][i].out;
		and[12][i].b <== multi_or[12][i].out;
		states[i+1][9] <== and[12][i].out;
		state_changed[i].in[8] <== states[i+1][9];
		eq[72][i] = IsEqual();
		eq[72][i].in[0] <== in[i];
		eq[72][i].in[1] <== 91;
		eq[73][i] = IsEqual();
		eq[73][i].in[0] <== in[i];
		eq[73][i].in[1] <== 34;
		eq[74][i] = IsEqual();
		eq[74][i].in[0] <== in[i];
		eq[74][i].in[1] <== 101;
		eq[75][i] = IsEqual();
		eq[75][i].in[0] <== in[i];
		eq[75][i].in[1] <== 93;
		and[13][i] = AND();
		and[13][i].a <== states[i][9];
		multi_or[13][i] = MultiOR(4);
		multi_or[13][i].in[0] <== eq[72][i].out;
		multi_or[13][i].in[1] <== eq[73][i].out;
		multi_or[13][i].in[2] <== eq[74][i].out;
		multi_or[13][i].in[3] <== eq[75][i].out;
		and[13][i].b <== multi_or[13][i].out;
		states[i+1][10] <== and[13][i].out;
		state_changed[i].in[9] <== states[i+1][10];
		eq[76][i] = IsEqual();
		eq[76][i].in[0] <== in[i];
		eq[76][i].in[1] <== 91;
		eq[77][i] = IsEqual();
		eq[77][i].in[0] <== in[i];
		eq[77][i].in[1] <== 34;
		eq[78][i] = IsEqual();
		eq[78][i].in[0] <== in[i];
		eq[78][i].in[1] <== 99;
		eq[79][i] = IsEqual();
		eq[79][i].in[0] <== in[i];
		eq[79][i].in[1] <== 93;
		and[14][i] = AND();
		and[14][i].a <== states[i][10];
		multi_or[14][i] = MultiOR(4);
		multi_or[14][i].in[0] <== eq[76][i].out;
		multi_or[14][i].in[1] <== eq[77][i].out;
		multi_or[14][i].in[2] <== eq[78][i].out;
		multi_or[14][i].in[3] <== eq[79][i].out;
		and[14][i].b <== multi_or[14][i].out;
		states[i+1][11] <== and[14][i].out;
		state_changed[i].in[10] <== states[i+1][11];
		eq[80][i] = IsEqual();
		eq[80][i].in[0] <== in[i];
		eq[80][i].in[1] <== 91;
		eq[81][i] = IsEqual();
		eq[81][i].in[0] <== in[i];
		eq[81][i].in[1] <== 34;
		eq[82][i] = IsEqual();
		eq[82][i].in[0] <== in[i];
		eq[82][i].in[1] <== 116;
		eq[83][i] = IsEqual();
		eq[83][i].in[0] <== in[i];
		eq[83][i].in[1] <== 93;
		and[15][i] = AND();
		and[15][i].a <== states[i][11];
		multi_or[15][i] = MultiOR(4);
		multi_or[15][i].in[0] <== eq[80][i].out;
		multi_or[15][i].in[1] <== eq[81][i].out;
		multi_or[15][i].in[2] <== eq[82][i].out;
		multi_or[15][i].in[3] <== eq[83][i].out;
		and[15][i].b <== multi_or[15][i].out;
		states[i+1][12] <== and[15][i].out;
		state_changed[i].in[11] <== states[i+1][12];
		eq[84][i] = IsEqual();
		eq[84][i].in[0] <== in[i];
		eq[84][i].in[1] <== 91;
		eq[85][i] = IsEqual();
		eq[85][i].in[0] <== in[i];
		eq[85][i].in[1] <== 34;
		eq[86][i] = IsEqual();
		eq[86][i].in[0] <== in[i];
		eq[86][i].in[1] <== 58;
		eq[87][i] = IsEqual();
		eq[87][i].in[0] <== in[i];
		eq[87][i].in[1] <== 93;
		and[16][i] = AND();
		and[16][i].a <== states[i][12];
		multi_or[16][i] = MultiOR(4);
		multi_or[16][i].in[0] <== eq[84][i].out;
		multi_or[16][i].in[1] <== eq[85][i].out;
		multi_or[16][i].in[2] <== eq[86][i].out;
		multi_or[16][i].in[3] <== eq[87][i].out;
		and[16][i].b <== multi_or[16][i].out;
		states[i+1][13] <== and[16][i].out;
		state_changed[i].in[12] <== states[i+1][13];
		states[i+1][0] <== 1 - state_changed[i].out;
	}

	component final_state_result = MultiOR(num_bytes+1);
	for (var i = 0; i <= num_bytes; i++) {
		final_state_result.in[i] <== states[i][8];
	}
	out <== final_state_result.out;

	signal is_substr0[msg_bytes][3];
	signal output reveal0[msg_bytes];
	for (var i = 0; i < msg_bytes; i++) {
		is_substr0[i][0] <== 0;
		is_substr0[i][1] <== is_substr0[i][0] + states[i+1][13] * states[i+2][1];
		is_substr0[i][2] <== is_substr0[i][1] + states[i+1][1] * states[i+2][1];
		reveal0[i] <== in[i+1] * is_substr0[i][2];
	}
}